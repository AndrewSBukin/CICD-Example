{"remainingRequest":"C:\\Projects\\Согласование\\CR_Approve_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Projects\\Согласование\\CR_Approve_vue\\src\\components\\AdminButon\\index.vue?vue&type=style&index=0&lang=less&module=true&","dependencies":[{"path":"C:\\Projects\\Согласование\\CR_Approve_vue\\src\\components\\AdminButon\\index.vue","mtime":1620229007471},{"path":"C:\\Projects\\Согласование\\CR_Approve_vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Projects\\Согласование\\CR_Approve_vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Projects\\Согласование\\CR_Approve_vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Projects\\Согласование\\CR_Approve_vue\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Projects\\Согласование\\CR_Approve_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Projects\\Согласование\\CR_Approve_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIi4vc3R5bGUvbW9iaWxlIjsKQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7CiAgICBAaW1wb3J0ICIuL3N0eWxlL3RhYmxldCI7Cn0KQG1lZGlhIChtaW4td2lkdGg6IDEzNjZweCkgewogICAgQGltcG9ydCAiLi9zdHlsZS9kZXNrdG9wIjsKfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/AdminButon","sourcesContent":["<template lang='pug'>\r\n    DropdownO(v-model=\"dropdown\")\r\n        template(slot=\"button\")\r\n            a(href :class=\"$style.link\" @click.prevent=\"\")\r\n                slot(name=\"icons\")\r\n        div\r\n            transition(name=\"dropdown\")\r\n                div(v-if=\"dropdown\" :class=\"[$style.adminPanel, $style.adminPanelRight]\" )\r\n                    div(:class=\"$style.adminPanelWrapper\")\r\n                        div(:class=\"$style.adminPanelText\") {{ text }}\r\n                        button(:class=\"$style.button\" @click=\"approve(row)\") Подтвердить действие\r\n</template>\r\n<script>\r\nimport DropdownO from '../Dropdown/index'\r\nimport {mapActions} from 'vuex'\r\n\r\nexport default {\r\n    components: {DropdownO},\r\n    name: 'AdminButton',\r\n    props: {\r\n        order: Number,\r\n        index: Number,\r\n        id: [Number, String],\r\n        action: String,\r\n        text: String,\r\n        scrollSearch: String,\r\n        row: Object\r\n    },\r\n    data: () => ({\r\n        dropdown: false,\r\n        position: {},\r\n    }),\r\n    methods: {\r\n        ...mapActions({\r\n            apiAll: 'api/apiAll'\r\n        }),\r\n        getCoords(elem) {\r\n            let box = elem.getBoundingClientRect();\r\n            return { top: box.top + pageYOffset, left: box.left + pageXOffset }\r\n        },\r\n        approve(row) {\r\n            row.isBlocked = !row.isBlocked\r\n            this.apiAll({type: 'put', url: `api/Users/${row.id}/blocking?isBlocked=${row.isBlocked}`, id: undefined})\r\n\t\t\t.then(res => {\r\n\t\t\t\tif(res.status == 200) {\r\n\t\t\t\t\tthis.$notify({ group: 'foo', duration: 5000, type: 'success', title: 'Успешно', text: `Пользователь успешно ${row.isBlocked ? 'деактивирован' : 'активирован'}` })\r\n                    this.dropdown = false\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.$notify({ group: 'foo', duration: 5000, type: 'error', title: 'Ошибка', text: 'Произошла ошибка при создании пользователя' })\r\n\t\t\t\t}\r\n\t\t\t})\r\n        }\r\n    },\r\n    watch: {\r\n        dropdown (val) {\r\n            if (val) {\r\n                let { bottom, right, left } = this.$el.getBoundingClientRect()\r\n                // const viewport = document.body.querySelector('.os-viewport')\r\n                // bottom += viewport.scrollTop\r\n                // y = this.getCoords(this.$el).top\r\n                // console.log('2',{ y, right, left })\r\n\r\n                this.position = { bottom, right, left }\r\n            }\r\n        },\r\n    },\r\n}\r\n</script>\r\n\r\n<style lang='less' module>\r\n    @import \"./style/mobile\";\r\n    @media (min-width: 768px) {\r\n        @import \"./style/tablet\";\r\n    }\r\n    @media (min-width: 1366px) {\r\n        @import \"./style/desktop\";\r\n    }\r\n</style>"]}]}