{"remainingRequest":"C:\\Projects\\Согласование\\CR_Approve_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Projects\\Согласование\\CR_Approve_vue\\src\\components\\Info\\index.vue?vue&type=style&index=0&lang=less&module=true&","dependencies":[{"path":"C:\\Projects\\Согласование\\CR_Approve_vue\\src\\components\\Info\\index.vue","mtime":1620229007511},{"path":"C:\\Projects\\Согласование\\CR_Approve_vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Projects\\Согласование\\CR_Approve_vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Projects\\Согласование\\CR_Approve_vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Projects\\Согласование\\CR_Approve_vue\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Projects\\Согласование\\CR_Approve_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Projects\\Согласование\\CR_Approve_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIi4vc3R5bGUvbW9iaWxlIjsKCkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkgewogICAgQGltcG9ydCAiLi9zdHlsZS90YWJsZXQiOwp9CgpAbWVkaWEgKG1pbi13aWR0aDogMTM2NnB4KSB7CiAgICBAaW1wb3J0ICIuL3N0eWxlL2Rlc2t0b3AiOwp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/Info","sourcesContent":["<template lang='pug'>\r\n    Dropdown(v-model=\"open\" :class=\"$style.notification\")\r\n        template(slot=\"button\")\r\n            div(:class=\"$style.wrapper\")\r\n                div(:class=\"[$style.link, {[$style.open]: open}]\")\r\n                    infoIcon\r\n        div(:class=\"$style.drop\")\r\n            div()\r\n                div(style=\"max-height:350px\")\r\n                    div(:class=\"$style.transitionGroup\")\r\n                        header(:class=\"$style.headerInfo\") Помощь\r\n                        div(:class=\"$style.mainInfo\")\r\n                            a(:class=\"$style.ahref\" :href=\"`${apiUrlFile}Files/${getUserInfo&&getUserInfo.role&&getUserInfo.role.id == 1 ? 'mnpko' : (getUserInfo&&getUserInfo.role&&getUserInfo.role.id == 2 ? 'mz' : getUserInfo&&getUserInfo.role&&getUserInfo.role.id == 3 ? 'cekkmp' : 'npc')}.pdf`\" target=\"_blank\")\r\n                                p Руководство пользователя скачать\r\n                                    <iconDownloadSvg class=\"b-icon b-icon--report\" style=\"height:12px;fill:blue;padding-left:4px\" />\r\n                            span Служба технической поддержки:\r\n                                a(:class=\"$style.ahref\" href=\"javascript:void(0);\") support@nitrosbase.com \r\n                            p Часы работы: 09:00-18:00 (МСК)\r\n\r\n</template>\r\n<script>\r\nimport Dropdown from '../Dropdown/index'\r\nimport infoIcon from '../../assets/icons/svg/question.svg?inline'\r\nimport iconDownloadSvg from \"../../assets/icons/svg/download.svg\";\r\n\r\nimport {mapGetters, mapActions, mapMutations} from 'vuex'\r\n\r\n\r\nconst dateFormatter = new Intl.DateTimeFormat('ru', {\r\n\tyear: 'numeric',\r\n\tmonth: 'numeric',\r\n\tday: 'numeric',\r\n})\r\nconst timeFormatter = new Intl.DateTimeFormat('ru', {\r\n\thour: '2-digit',\r\n\tminute: '2-digit',\r\n})\r\n\r\nexport default {\r\n    components: { iconDownloadSvg, infoIcon, Dropdown },\r\n    name: 'Info',\r\n    data: () => ({\r\n        open: false\r\n\t}),\r\n    computed: {\r\n        ...mapGetters({\r\n            notifications: 'lu/gettersNotification',\r\n            getUserInfo: 'auth/getUserInfo',\r\n            apiUrlFile: 'apiUrlFile'\r\n        })\r\n    },\r\n\tmethods: {\r\n        ...mapActions({\r\n            apiAll: 'api/apiAll'\r\n        }),\r\n        ...mapMutations({\r\n            allNotificationTrue: 'lu/allNotificationTrue'\r\n        }),\r\n\t\thideNotification(item, all) {\r\n            if(!all){\r\n                item.view = !item.view\r\n                this.apiAll({type: 'put', url: `api/Notifications`, obj: [item.id], id: undefined})\r\n            } else {\r\n                this.apiAll({type: 'put', url: `api/Notifications`, obj: this.notifications.map(m=>m.id), id: undefined})\r\n                .then(res => {\r\n                    if(res.status == 200) this.allNotificationTrue()\r\n                })\r\n            }\r\n\t\t}\r\n\t},\r\n\tfilters: {\r\n\t\tformatDate(date) {\r\n\t\t\treturn dateFormatter.format(new Date(date || Date.now()))\r\n\t\t},\r\n\t\tformatTime(date) {\r\n\t\t\treturn timeFormatter.format(new Date(date || Date.now()))\r\n\t\t},\r\n\t}\r\n}\r\n</script>\r\n\r\n<style lang='less' module>\r\n    @import \"./style/mobile\";\r\n\r\n    @media (min-width: 768px) {\r\n        @import \"./style/tablet\";\r\n    }\r\n\r\n    @media (min-width: 1366px) {\r\n        @import \"./style/desktop\";\r\n    }\r\n</style>"]}]}